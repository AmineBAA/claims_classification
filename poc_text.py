# -*- coding: utf-8 -*-
"""Poc.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TpCBT-dIPl7pTRG-zzMoY_9NqsuW0GUS
"""
import numpy as np
import sklearn
import pandas as pd
from sklearn.preprocessing import LabelEncoder

import re

import streamlit as st
import pandas as pd
import pickle


from transformers import XLNetTokenizer, XLNetForSequenceClassification, AdamW
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score



# Load your trained model
model, tokenizer = pickle.load(open('claim_classifier.pkl', 'rb'))

import torch

def load_model(model_path):
    device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')
    with open('claim_classifier.pkl', 'rb') as f:
        model,tokenizer = pickle.load(f)
    model.to(device)
    return model


def classify_claim(claim):
    encoding = tokenizer.encode_plus(
        claim,
        add_special_tokens=True,
        max_length=max_length,
        return_token_type_ids=False,
        padding='max_length',
        truncation=True,
        return_attention_mask=True,
        return_tensors='pt',
    )
    input_ids = encoding['input_ids'].to(device)
    attention_mask = encoding['attention_mask'].to(device)

    with torch.no_grad():
        outputs = model(input_ids=input_ids, attention_mask=attention_mask)
        logits = outputs.logits
        prediction = torch.argmax(logits, dim=-1).item()

    return 'carte' if prediction == 1 else 'autre'

# File uploader
uploaded_file = st.file_uploader("Choose an Excel file", type=['xlsx'])
if uploaded_file is not None:
    df_test = pd.read_excel(uploaded_file)
    X_test = df_test.v2
    predictions = classify_claim(X_test) 
    df_test['predictions'] = predictions
    st.write(df_test)







